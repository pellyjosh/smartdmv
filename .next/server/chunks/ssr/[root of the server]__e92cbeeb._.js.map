{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/symptom-assessment.ts"],"sourcesContent":["// Symptom assessment flow\n'use server';\n/**\n * @fileOverview AI-powered symptom checker for preliminary pet symptom assessment.\n *\n * - assessSymptoms - A function that handles the symptom assessment process.\n * - SymptomAssessmentInput - The input type for the assessSymptoms function.\n * - SymptomAssessmentOutput - The return type for the assessSymptoms function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst SymptomAssessmentInputSchema = z.object({\n  species: z.string().describe('The species of the pet (e.g., dog, cat, bird).'),\n  age: z.number().describe('The age of the pet in years.'),\n  symptoms: z.string().describe('A detailed description of the pet\\'s symptoms.'),\n});\nexport type SymptomAssessmentInput = z.infer<typeof SymptomAssessmentInputSchema>;\n\nconst SymptomAssessmentOutputSchema = z.object({\n  likelyIssues: z.string().describe('A list of the most likely potential issues based on the symptoms.'),\n  severity: z.string().describe('An assessment of the severity of the symptoms (e.g., mild, moderate, severe).'),\n  recommendation: z.string().describe('A recommendation on whether a vet visit is necessary and how soon.'),\n  additionalNotes: z.string().optional().describe('Any additional notes or observations.'),\n});\nexport type SymptomAssessmentOutput = z.infer<typeof SymptomAssessmentOutputSchema>;\n\nexport async function assessSymptoms(input: SymptomAssessmentInput): Promise<SymptomAssessmentOutput> {\n  return symptomAssessmentFlow(input);\n}\n\nconst symptomAssessmentPrompt = ai.definePrompt({\n  name: 'symptomAssessmentPrompt',\n  input: {schema: SymptomAssessmentInputSchema},\n  output: {schema: SymptomAssessmentOutputSchema},\n  prompt: `You are an AI-powered veterinary assistant. A pet owner will describe their pet's symptoms, and you will provide a preliminary assessment.\n\n  Consider the pet's species, age, and symptoms to determine the likely issues, severity, and recommendations.\n\n  Species: {{{species}}}\n  Age: {{{age}}} years\n  Symptoms: {{{symptoms}}}\n\n  Respond with a structured assessment, including likely issues, severity, and a recommendation on whether a vet visit is necessary. Include additional notes if relevant.\n\n  Format your repsonse as a valid JSON conforming to the output schema.`,\n});\n\nconst symptomAssessmentFlow = ai.defineFlow(\n  {\n    name: 'symptomAssessmentFlow',\n    inputSchema: SymptomAssessmentInputSchema,\n    outputSchema: SymptomAssessmentOutputSchema,\n  },\n  async input => {\n    const {output} = await symptomAssessmentPrompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":"AAAA,0BAA0B;;;;;;AAE1B;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,+BAA+B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC5C,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC7B,KAAK,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACzB,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAChC;AAGA,MAAM,gCAAgC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC7C,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAClC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,gBAAgB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACpC,iBAAiB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;AAClD;AAGO,eAAe,uCAAY,GAAZ,eAAe,KAA6B;IAChE,OAAO,sBAAsB;AAC/B;AAEA,MAAM,0BAA0B,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC9C,MAAM;IACN,OAAO;QAAC,QAAQ;IAA4B;IAC5C,QAAQ;QAAC,QAAQ;IAA6B;IAC9C,QAAQ,CAAC;;;;;;;;;;uEAU4D,CAAC;AACxE;AAEA,MAAM,wBAAwB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACzC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,wBAAwB;IAC/C,OAAO;AACT;;;IA9BoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 360, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/symptom-checker/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/symptom-checker/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/symptom-checker/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoS,GACjU,kEACA","debugId":null}},
    {"offset": {"line": 374, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/symptom-checker/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/symptom-checker/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/symptom-checker/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgR,GAC7S,8CACA","debugId":null}},
    {"offset": {"line": 388, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}