{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAEA;AAEA;AACA;AASA;AACA;AAfA;;;;;;;AAiBA,MAAM,OAAO,8JAAA,CAAA,eAAY;AASzB,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,gBAAmB,AAAD,EACzC,CAAC;AAGH,MAAM,YAAY,CAGhB,EACA,GAAG,OACkC;IACrC,qBACE,8OAAC,iBAAiB,QAAQ;QAAC,OAAO;YAAE,MAAM,MAAM,IAAI;QAAC;kBACnD,cAAA,8OAAC,8JAAA,CAAA,aAAU;YAAE,GAAG,KAAK;;;;;;;;;;;AAG3B;AAEA,MAAM,eAAe;IACnB,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE;IACtC,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE;IACrC,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,iBAAc,AAAD;IAElD,MAAM,aAAa,cAAc,aAAa,IAAI,EAAE;IAEpD,IAAI,CAAC,cAAc;QACjB,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,EAAE,EAAE,EAAE,GAAG;IAEf,OAAO;QACL;QACA,MAAM,aAAa,IAAI;QACvB,YAAY,GAAG,GAAG,UAAU,CAAC;QAC7B,mBAAmB,GAAG,GAAG,sBAAsB,CAAC;QAChD,eAAe,GAAG,GAAG,kBAAkB,CAAC;QACxC,GAAG,UAAU;IACf;AACF;AAMA,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,gBAAmB,AAAD,EACxC,CAAC;AAGH,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,MAAM,KAAK,CAAA,GAAA,qMAAA,CAAA,QAAW,AAAD;IAErB,qBACE,8OAAC,gBAAgB,QAAQ;QAAC,OAAO;YAAE;QAAG;kBACpC,cAAA,8OAAC;YAAI,KAAK;YAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,aAAa;YAAa,GAAG,KAAK;;;;;;;;;;;AAGrE;AACA,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG;IAE9B,qBACE,8OAAC,iIAAA,CAAA,QAAK;QACJ,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,SAAS,oBAAoB;QAC3C,SAAS;QACR,GAAG,KAAK;;;;;;AAGf;AACA,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,GAAG,OAAO,EAAE;IACf,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAE,GAAG;IAEhE,qBACE,8OAAC,gKAAA,CAAA,OAAI;QACH,KAAK;QACL,IAAI;QACJ,oBACE,CAAC,QACG,GAAG,mBAAmB,GACtB,GAAG,kBAAkB,CAAC,EAAE,eAAe;QAE7C,gBAAc,CAAC,CAAC;QACf,GAAG,KAAK;;;;;;AAGf;AACA,YAAY,WAAW,GAAG;AAE1B,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,MAAM,EAAE,iBAAiB,EAAE,GAAG;IAE9B,qBACE,8OAAC;QACC,KAAK;QACL,IAAI;QACJ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AACA,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;IACpC,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG;IACjC,MAAM,OAAO,QAAQ,OAAO,OAAO,WAAW,MAAM;IAEpD,IAAI,CAAC,MAAM;QACT,OAAO;IACT;IAEA,qBACE,8OAAC;QACC,KAAK;QACL,IAAI;QACJ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,wCAAwC;QACrD,GAAG,KAAK;kBAER;;;;;;AAGP;AACA,YAAY,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,oKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,8OAAC,oMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,oKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-login-image-flow.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview Generates an image for the login page background.\n * - generateLoginImage - A function that returns a data URI for a generated image.\n * - LoginImageInput - Input type (optional, can be topic).\n * - LoginImageOutput - Output type (imageDataUri).\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst LoginImageInputSchema = z.object({\n  topic: z.string().optional().default('veterinary clinic environment'),\n});\nexport type LoginImageInput = z.infer<typeof LoginImageInputSchema>;\n\nconst LoginImageOutputSchema = z.object({\n  imageDataUri: z.string().describe('The generated image as a data URI.'),\n});\nexport type LoginImageOutput = z.infer<typeof LoginImageOutputSchema>;\n\nexport async function generateLoginImage(input: LoginImageInput): Promise<LoginImageOutput> {\n  return generateLoginImageFlow(input);\n}\n\n// Define the flow for generating the login image\nconst generateLoginImageFlow = ai.defineFlow(\n  {\n    name: 'generateLoginImageFlow',\n    inputSchema: LoginImageInputSchema,\n    outputSchema: LoginImageOutputSchema,\n  },\n  async (input) => {\n    const {media} = await ai.generate({\n      model: 'googleai/gemini-2.0-flash-exp', // Ensure this model is used for image generation\n      prompt: `Generate an image of a ${input.topic}. The image should be serene, professional, well-lit, with a comfortable and welcoming atmosphere. Optionally include subtle hints of happy pets or friendly staff in the background. The image should evoke trust and calmness. Dimensions should be suitable for a tall background (e.g., portrait orientation).`,\n      config: {\n        responseModalities: ['TEXT', 'IMAGE'], // Must include IMAGE for image generation\n      },\n      safetySettings: [ // Recommended safety settings\n        { category: 'HARM_CATEGORY_HATE_SPEECH', threshold: 'BLOCK_ONLY_HIGH' },\n        { category: 'HARM_CATEGORY_DANGEROUS_CONTENT', threshold: 'BLOCK_NONE' },\n        { category: 'HARM_CATEGORY_HARASSMENT', threshold: 'BLOCK_MEDIUM_AND_ABOVE' },\n        { category: 'HARM_CATEGORY_SEXUALLY_EXPLICIT', threshold: 'BLOCK_LOW_AND_ABOVE' },\n      ],\n    });\n\n    if (!media || !media.url) {\n      throw new Error('Image generation failed to return a media URL.');\n    }\n    return { imageDataUri: media.url };\n  }\n);\n"],"names":[],"mappings":";;;;;IAsBsB","debugId":null}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/auth/login/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport NextImage from \"next/image\"; // Renamed to avoid conflict with local Image variable\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { HeartPulse, PawPrint, LogIn as LogInIcon, Eye, EyeOff, Loader2 } from \"lucide-react\";\nimport { useRouter } from \"next/navigation\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useUser } from \"@/context/UserContext\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { generateLoginImage } from '@/ai/flows/generate-login-image-flow';\n\nconst loginFormSchema = z.object({\n  email: z.string().email({ message: \"Please enter a valid email address\" }),\n  password: z.string().min(1, { message: \"Password is required\" }),\n  rememberMe: z.boolean().optional(),\n});\n\ntype LoginFormValues = z.infer<typeof loginFormSchema>;\n\nexport default function LoginPage() {\n  const userContext = useUser();\n  const { user, login, isLoading: authIsLoading, initialAuthChecked } = userContext;\n\n  const { toast } = useToast();\n  const router = useRouter();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [loginImage, setLoginImage] = useState<string>(\"https://placehold.co/800x1200.png\");\n  const [imageLoading, setImageLoading] = useState(true);\n  const [imageError, setImageError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchImage = async () => {\n      setImageLoading(true);\n      setImageError(null);\n      try {\n        const result = await generateLoginImage({ topic: \"veterinary clinic environment\" });\n        if (result.imageDataUri) {\n          setLoginImage(result.imageDataUri);\n        } else {\n          throw new Error(\"No image data URI returned\");\n        }\n      } catch (err) {\n        console.error(\"Failed to generate login image:\", err);\n        setImageError(\"Could not load background image.\");\n        // Fallback to placeholder is already the default state of loginImage\n      } finally {\n        setImageLoading(false);\n      }\n    };\n    // fetchImage(); // Uncomment to enable AI image generation\n    setImageLoading(false); // Keeping placeholder for now to avoid API calls during testing\n  }, []);\n\n  const loginForm = useForm<LoginFormValues>({\n    resolver: zodResolver(loginFormSchema),\n    defaultValues: {\n      email: \"\",\n      password: \"\",\n      rememberMe: false,\n    },\n  });\n\n  const onLoginSubmit = async (data: LoginFormValues) => {\n    setIsSubmitting(true);\n    try {\n      console.log('[LoginPage] onLoginSubmit called with:', data.email);\n      const loggedInUser = await login(data.email, data.password); // login from UserContext\n      if (loggedInUser) {\n        toast({\n          title: \"Login Successful\",\n          description: \"Redirecting to your dashboard...\",\n          variant: \"default\",\n        });\n        console.log('[LoginPage] Login successful for user:', loggedInUser.email);\n        // Navigation is handled by UserProvider's useEffect based on user state change\n      } else {\n         toast({\n            title: \"Login Failed\",\n            description: \"Login attempt returned no user, but no specific error was thrown.\",\n            variant: \"destructive\",\n        });\n        console.warn('[LoginPage] Login call returned no user, but no error thrown.');\n      }\n    } catch (error: any) {\n      toast({\n        title: \"Login Failed\",\n        description: error.message || \"Invalid credentials or server error.\",\n        variant: \"destructive\",\n      });\n      console.error('[LoginPage] Login submission error:', error);\n    } finally {\n        setIsSubmitting(false);\n    }\n  };\n\n  console.log('[LoginPage Render] Context State: authIsLoading:', authIsLoading, 'initialAuthChecked:', initialAuthChecked, 'user:', user ? user.email : null);\n\n  if (!initialAuthChecked || (authIsLoading && !user) ) { // Show loading if still checking or if loading and no user yet\n    console.log('[LoginPage Render] Initial auth not checked or auth is loading. Rendering loading message.');\n    return (\n      <div className=\"flex flex-col justify-center items-center h-screen bg-slate-100\">\n        <Loader2 className=\"h-12 w-12 animate-spin text-primary mb-4\" />\n        <p className=\"text-lg text-muted-foreground\">Loading authentication status...</p>\n      </div>\n    );\n  }\n\n  if (user && initialAuthChecked && !authIsLoading) {\n    console.log('[LoginPage Render] User is authenticated, initial check done, not loading. Rendering redirect message.');\n    return (\n      <div className=\"flex flex-col justify-center items-center h-screen bg-slate-100\">\n        <Loader2 className=\"h-12 w-12 animate-spin text-primary mb-4\" />\n        <p className=\"text-lg text-muted-foreground\">Redirecting...</p>\n      </div>\n    );\n  }\n\n  console.log('[LoginPage Render] Rendering login form.');\n  return (\n    <div className=\"min-h-screen flex flex-col bg-slate-100\">\n      <header className=\"w-full p-4 flex justify-start items-center border-b border-border bg-card shadow-sm\">\n        <div className=\"flex items-center\">\n          <HeartPulse className=\"h-8 w-8 text-primary mr-2\" />\n          <span className=\"font-bold text-xl text-foreground\">Smart<span className=\"text-primary\">DVM</span></span>\n        </div>\n      </header>\n      <main className=\"flex-1 flex flex-col md:flex-row\">\n        <div className=\"w-full md:w-2/5 bg-card p-8 md:p-12 lg:p-16 flex flex-col justify-center\">\n          <div className=\"max-w-md mx-auto w-full\">\n            <div className=\"mb-10 text-left\">\n              <h1 className=\"text-3xl font-bold text-foreground\">Welcome back</h1>\n              <p className=\"mt-2 text-sm text-muted-foreground\">\n                Sign in to access your veterinary practice\n              </p>\n            </div>\n\n            <Form {...loginForm}>\n              <form onSubmit={loginForm.handleSubmit(onLoginSubmit)} className=\"space-y-6\">\n                <FormField\n                  control={loginForm.control}\n                  name=\"email\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"text-sm font-medium text-foreground\">Email</FormLabel>\n                      <FormControl>\n                        <Input\n                          placeholder=\"Enter your email\"\n                          {...field}\n                          className=\"text-base md:text-sm\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={loginForm.control}\n                  name=\"password\"\n                  render={({ field }) => (\n                    <FormItem>\n                       <FormLabel className=\"text-sm font-medium text-foreground\">Password</FormLabel>\n                      <FormControl>\n                        <div className=\"relative\">\n                          <Input\n                            type={showPassword ? \"text\" : \"password\"}\n                            placeholder=\"Enter your password\"\n                            {...field}\n                            className=\"text-base md:text-sm pr-10\"\n                          />\n                          <button\n                            type=\"button\"\n                            onClick={() => setShowPassword(!showPassword)}\n                            className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-muted-foreground hover:text-foreground\"\n                            aria-label={showPassword ? \"Hide password\" : \"Show password\"}\n                          >\n                            {showPassword ? <EyeOff className=\"h-5 w-5\" /> : <Eye className=\"h-5 w-5\" />}\n                          </button>\n                        </div>\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <div className=\"flex items-center justify-between\">\n                  <FormField\n                    control={loginForm.control}\n                    name=\"rememberMe\"\n                    render={({ field }) => (\n                      <FormItem className=\"flex flex-row items-center space-x-2 space-y-0\">\n                        <FormControl>\n                          <Checkbox\n                            checked={field.value}\n                            onCheckedChange={field.onChange}\n                            className=\"data-[state=checked]:bg-primary data-[state=checked]:border-primary\"\n                          />\n                        </FormControl>\n                        <FormLabel className=\"text-sm font-normal text-muted-foreground cursor-pointer\">\n                          Remember me\n                        </FormLabel>\n                      </FormItem>\n                    )}\n                  />\n                  <Button\n                    variant=\"link\"\n                    className=\"p-0 h-auto text-sm font-normal text-primary hover:underline\"\n                    type=\"button\"\n                    onClick={() => toast({ title: \"Forgot Password\", description: \"Password recovery is not yet implemented.\"})}\n                  >\n                    Forgot password?\n                  </Button>\n                </div>\n\n                <Button\n                  type=\"submit\"\n                  className=\"w-full py-3 bg-primary text-primary-foreground hover:bg-primary/90\"\n                  disabled={isSubmitting || authIsLoading}\n                >\n                  {(isSubmitting || authIsLoading) ? (\n                    <>\n                      <LogInIcon className=\"mr-2 h-4 w-4 animate-spin\" />\n                      Signing in...\n                    </>\n                  ) : \"Sign in\"}\n                </Button>\n              </form>\n            </Form>\n          </div>\n        </div>\n\n        <div className=\"hidden md:flex md:w-3/5 relative\">\n          {imageLoading && (\n            <div className=\"absolute inset-0 flex justify-center items-center bg-slate-200\">\n              <Loader2 className=\"h-10 w-10 animate-spin text-primary\" />\n            </div>\n          )}\n          {!imageLoading && imageError && (\n            <div className=\"absolute inset-0 flex flex-col justify-center items-center bg-slate-200 p-4 text-center\">\n              <p className=\"text-destructive mb-2\">{imageError}</p>\n              <p className=\"text-sm text-muted-foreground\">Displaying default image.</p>\n            </div>\n          )}\n          <NextImage\n            src={loginImage}\n            alt=\"Illustration of a veterinary clinic scene with pets and vets\"\n            layout=\"fill\"\n            objectFit=\"cover\"\n            className=\"opacity-90\"\n            data-ai-hint=\"veterinary clinic illustration\"\n            priority\n            unoptimized={loginImage.startsWith('data:image')}\n          />\n          <div className=\"absolute inset-x-0 bottom-0 p-8 lg:p-12\">\n            <div className=\"bg-white/80 dark:bg-slate-900/80 backdrop-blur-sm p-6 rounded-lg shadow-md text-gray-800 dark:text-gray-200\">\n              <h2 className=\"text-xl lg:text-2xl font-semibold mb-3 text-primary\">\n                Complete Veterinary Management\n              </h2>\n              <p className=\"text-xs lg:text-sm leading-relaxed\">\n                VetConnectPro provides a comprehensive solution for modern veterinary practices with appointment scheduling, medical records, lab integration, and AI-powered diagnostic assistance.\n              </p>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}