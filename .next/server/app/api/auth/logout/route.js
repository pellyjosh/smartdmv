(()=>{var e={};e.id=489,e.ids=[489],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},21820:e=>{"use strict";e.exports=require("os")},29021:e=>{"use strict";e.exports=require("fs")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},33873:e=>{"use strict";e.exports=require("path")},38927:(e,t,r)=>{"use strict";r.a(e,async(e,s)=>{try{r.r(t),r.d(t,{POST:()=>d});var o=r(32190),n=r(44999),a=r(42154),i=r(75280),l=r(94634),c=r(53777),u=e([a]);async function d(){console.log("[API Logout START] Received request to /api/auth/logout");try{let e=(await n.UL()).get(c.CF)?.value;e?(console.log(`[API Logout] Attempting to delete session ${e} from DB.`),(await a.db.delete(i.sessions).where((0,l.eq)(i.sessions.id,e)).returning({id:i.sessions.id})).length>0?console.log(`[API Logout] Session ${e} deleted successfully from DB.`):console.warn(`[API Logout] Session ${e} not found in DB for deletion, or already deleted.`)):console.log("[API Logout] No httpOnly session token found in request cookies to clear."),console.log("[API Logout] Clearing httpOnly session token cookie.");let t=o.NextResponse.json({message:"Logged out successfully"},{status:200});return t.cookies.set(c.CF,"",{httpOnly:!0,secure:!0,maxAge:0,path:"/",sameSite:"lax"}),console.log("[API Logout SUCCESS] Logout successful, cookie clearing instruction sent."),t}catch(e){return console.error("[API Logout CATCH_ERROR] Error during logout:",e),o.NextResponse.json({error:"Failed to logout due to an unexpected server error."},{status:500})}}a=(u.then?(await u)():u)[0],s()}catch(e){s(e)}})},42154:(e,t,r)=>{"use strict";r.a(e,async(e,s)=>{try{let p;r.d(t,{db:()=>f});var o=r(97329),n=r(72094),a=r(11913),i=r(64939),l=r(87550),c=r.n(l),u=r(75280),d=e([i,n]);[i,n]=d.then?(await d)():d,(0,o.config)();let m=process.env.DB_TYPE||"postgres";if(console.log(`[DB_INIT] DB_TYPE set to: ${m}`),"postgres"===m){let e;if(!process.env.POSTGRES_URL)throw Error('POSTGRES_URL environment variable is not set for DB_TYPE="postgres".');console.log("\uD83D\uDD0C Connecting to PostgreSQL database..."),e=new i.Pool({connectionString:process.env.POSTGRES_URL}),p=(0,n.fd)(e,{schema:u,logger:!1}),console.log("âœ… PostgreSQL Drizzle instance created.")}else if("sqlite"===m){let e;if(!process.env.SQLITE_DB_PATH)throw Error('SQLITE_DB_PATH environment variable is not set for DB_TYPE="sqlite".');console.log(`ðŸ”Œ Connecting to SQLite database at: ${process.env.SQLITE_DB_PATH}`),e=new(c())(process.env.SQLITE_DB_PATH),p=(0,a.f)(e,{schema:u,logger:!1}),console.log("âœ… SQLite Drizzle instance created.")}else throw Error(`Unsupported DB_TYPE: ${m}. Must be "postgres" or "sqlite".`);let f=p;s()}catch(e){s(e)}})},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},53777:(e,t,r)=>{"use strict";r.d(t,{CF:()=>s,M9:()=>o});let s="session_token",o=604800},55511:e=>{"use strict";e.exports=require("crypto")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},64939:e=>{"use strict";e.exports=import("pg")},75280:(e,t,r)=>{"use strict";r.r(t),r.d(t,{administratorAccessiblePractices:()=>D,administratorAccessiblePracticesRelations:()=>w,practices:()=>_,practicesRelations:()=>R,schema:()=>M,sessions:()=>N,sessionsRelations:()=>I,userRoleEnum:()=>v,users:()=>S,usersRelations:()=>h});var s=r(57033),o=r(29334),n=r(58152),a=r(9253),i=r(28234),l=r(89283),c=r(77301),u=r(70932);let d=process.env.DB_TYPE||"postgres",p=(e,t,r)=>"sqlite"===d?i.D(e,t,r):s.cJ(e,t,r),m=(e,t)=>"sqlite"===d?l.Qq(e):o.Qq(e),f="sqlite"===d?c.ie:n.ie,g=(e,t)=>"sqlite"===d?u.nd():a.vE(e);var T=r(96657),A=r(64073);let P="sqlite"===process.env.DB_TYPE,_=p("practices",{id:m("id").primaryKey().$defaultFn(()=>crypto.randomUUID()),name:m("name").notNull(),createdAt:P?g("createdAt",{mode:"timestamp_ms"}).notNull().default((0,T.ll)`CURRENT_TIMESTAMP`):g("createdAt",{mode:"date"}).default((0,T.ll)`CURRENT_TIMESTAMP`).notNull(),updatedAt:P?g("updatedAt",{mode:"timestamp_ms"}).notNull().default((0,T.ll)`CURRENT_TIMESTAMP`).$onUpdate(()=>(0,T.ll)`CURRENT_TIMESTAMP`):g("updatedAt",{mode:"date"}).default((0,T.ll)`CURRENT_TIMESTAMP`).notNull()}),R=(0,A.K1)(_,({many:e})=>({usersPractice:e(S,{relationName:"usersPracticeRelation"}),usersCurrentPractice:e(S,{relationName:"usersCurrentPracticeRelation"}),accessibleToAdmins:e(D)})),E="sqlite"===process.env.DB_TYPE,N=p("sessions",{id:m("id").primaryKey().$defaultFn(()=>crypto.randomUUID()),userId:m("user_id").notNull().references(()=>S.id,{onDelete:"cascade"}),expiresAt:E?g("expiresAt",{mode:"timestamp_ms"}).notNull():g("expiresAt").notNull(),data:m("data"),createdAt:E?g("createdAt",{mode:"timestamp_ms"}).notNull().default((0,T.ll)`CURRENT_TIMESTAMP`):g("createdAt",{mode:"date"}).notNull().default((0,T.ll)`CURRENT_TIMESTAMP`)}),I=(0,A.K1)(N,({one:e})=>({user:e(S,{fields:[N.userId],references:[S.id]})})),y="sqlite"===process.env.DB_TYPE,v=["CLIENT","PRACTICE_ADMINISTRATOR","ADMINISTRATOR"],S=p("users",{id:m("id").primaryKey().$defaultFn(()=>crypto.randomUUID()),email:m("email").notNull().unique(),name:m("name"),password:m("password").notNull(),role:m("role",{enum:v}).notNull(),practiceId:m("practice_id").references(()=>_.id,{onDelete:"set null"}),currentPracticeId:m("current_practice_id").references(()=>_.id,{onDelete:"set null"}),createdAt:y?g("createdAt",{mode:"timestamp_ms"}).notNull().default((0,T.ll)`(strftime('%s', 'now') * 1000)`):g("createdAt",{mode:"date"}).default((0,T.ll)`CURRENT_TIMESTAMP`).notNull(),updatedAt:y?g("updatedAt",{mode:"timestamp_ms"}).notNull().default((0,T.ll)`(strftime('%s', 'now') * 1000)`).$onUpdate(()=>(0,T.ll)`(strftime('%s', 'now') * 1000)`):g("updatedAt",{mode:"date"}).notNull().default((0,T.ll)`CURRENT_TIMESTAMP`).$onUpdateFn(()=>new Date)}),D=p("administrator_accessible_practices",{administratorId:m("administrator_id").notNull().references(()=>S.id,{onDelete:"cascade"}),practiceId:m("practice_id").notNull().references(()=>_.id,{onDelete:"cascade"}),assignedAt:y?g("assignedAt",{mode:"timestamp_ms"}).notNull().default((0,T.ll)`(strftime('%s', 'now') * 1000)`):g("assignedAt",{mode:"date"}).notNull().default((0,T.ll)`CURRENT_TIMESTAMP`),createdAt:y?g("createdAt",{mode:"timestamp_ms"}).notNull().default((0,T.ll)`(strftime('%s', 'now') * 1000)`):g("createdAt",{mode:"date"}).notNull().default((0,T.ll)`CURRENT_TIMESTAMP`),updatedAt:y?g("updatedAt",{mode:"timestamp_ms"}).notNull().default((0,T.ll)`(strftime('%s', 'now') * 1000)`).$onUpdate(()=>(0,T.ll)`(strftime('%s', 'now') * 1000)`):g("updatedAt",{mode:"date"}).notNull().default((0,T.ll)`CURRENT_TIMESTAMP`).$onUpdateFn(()=>new Date)},e=>({pk:f({columns:[e.administratorId,e.practiceId]})})),h=(0,A.K1)(S,({one:e,many:t})=>({assignedPractice:e(_,{fields:[S.practiceId],references:[_.id],relationName:"usersPracticeRelation"}),currentSelectedPractice:e(_,{fields:[S.currentPracticeId],references:[_.id],relationName:"usersCurrentPracticeRelation"}),accessiblePractices:t(D),sessions:t(N)})),w=(0,A.K1)(D,({one:e})=>({administrator:e(S,{fields:[D.administratorId],references:[S.id]}),practice:e(_,{fields:[D.practiceId],references:[_.id]})})),M={users:S,practices:_,sessions:N,administratorAccessiblePractices:D}},76926:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"createDedupedByCallsiteServerErrorLoggerDev",{enumerable:!0,get:function(){return l}});let s=function(e,t){if(e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var r=o(t);if(r&&r.has(e))return r.get(e);var s={__proto__:null},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if("default"!==a&&Object.prototype.hasOwnProperty.call(e,a)){var i=n?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(s,a,i):s[a]=e[a]}return s.default=e,r&&r.set(e,s),s}(r(61120));function o(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,r=new WeakMap;return(o=function(e){return e?r:t})(e)}let n={current:null},a="function"==typeof s.cache?s.cache:e=>e,i=console.warn;function l(e){return function(...t){i(e(...t))}}a(e=>{try{i(n.current)}finally{n.current=null}})},78304:(e,t,r)=>{"use strict";r.a(e,async(e,s)=>{try{r.r(t),r.d(t,{patchFetch:()=>c,routeModule:()=>u,serverHooks:()=>m,workAsyncStorage:()=>d,workUnitAsyncStorage:()=>p});var o=r(96559),n=r(48088),a=r(37719),i=r(38927),l=e([i]);i=(l.then?(await l)():l)[0];let u=new o.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/auth/logout/route",pathname:"/api/auth/logout",filename:"route",bundlePath:"app/api/auth/logout/route"},resolvedPagePath:"/Users/Hubolux/Documents/Project 001/HuboluxJobs/smartdmv/src/app/api/auth/logout/route.ts",nextConfigOutput:"",userland:i}),{workAsyncStorage:d,workUnitAsyncStorage:p,serverHooks:m}=u;function c(){return(0,a.patchFetch)({workAsyncStorage:d,workUnitAsyncStorage:p})}s()}catch(e){s(e)}})},78335:()=>{},87550:e=>{"use strict";e.exports=require("better-sqlite3")},96487:()=>{}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[447,580,558],()=>r(78304));module.exports=s})();