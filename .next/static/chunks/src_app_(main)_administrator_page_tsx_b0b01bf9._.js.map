{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28main%29/administrator/page.tsx"],"sourcesContent":["\n\"use client\";\nimport { useUser, type AdministratorUser } from \"@/context/UserContext\";\nimport { Button } from \"@/components/ui/button\";\nimport { useRouter } from \"next/navigation\";\nimport { useEffect, useState } from \"react\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Loader2 } from 'lucide-react';\n\nexport default function AdministratorDashboardPage() {\n  const { user, logout, isLoading, initialAuthChecked, switchPractice } = useUser();\n  const router = useRouter();\n  const [currentPracticeSelection, setCurrentPracticeSelection] = useState<string | undefined>(undefined);\n\n  useEffect(() => {\n    if (user && user.role === 'ADMINISTRATOR') {\n      const adminUser = user as AdministratorUser;\n      // Only update local state if it's different from context, to avoid potential loops\n      // and ensure it correctly reflects the context's currentPracticeId.\n      if (adminUser.currentPracticeId && adminUser.currentPracticeId !== currentPracticeSelection) {\n        setCurrentPracticeSelection(adminUser.currentPracticeId);\n      } else if (!adminUser.currentPracticeId && currentPracticeSelection !== undefined) {\n        // Handle case where context might clear currentPracticeId (e.g. if it became invalid)\n        setCurrentPracticeSelection(undefined);\n      }\n    }\n  // Only re-run if `user` changes (which includes its currentPracticeId)\n  }, [user]); \n\n  if (isLoading || !initialAuthChecked) {\n    return (\n      <div className=\"flex flex-col justify-center items-center h-screen\">\n        <Loader2 className=\"h-12 w-12 animate-spin text-primary mb-4\" />\n        <p className=\"text-lg text-muted-foreground\">Loading, please wait...</p>\n      </div>\n    );\n  }\n\n  if (!user) {\n    return (\n      <div className=\"flex flex-col justify-center items-center h-screen\">\n        <Loader2 className=\"h-12 w-12 animate-spin text-primary mb-4\" />\n        <p className=\"text-lg text-muted-foreground\">Redirecting to login...</p>\n      </div>\n    );\n  }\n\n  if (user.role !== 'ADMINISTRATOR') {\n     router.push('/access-denied');\n     return (\n      <div className=\"flex flex-col justify-center items-center h-screen\">\n        <Loader2 className=\"h-12 w-12 animate-spin text-primary mb-4\" />\n        <p className=\"text-lg text-muted-foreground\">Access Denied. Redirecting...</p>\n      </div>\n    );\n  }\n\n  const adminUser = user as AdministratorUser;\n\n  const handlePracticeChange = async (newPracticeId: string) => {\n    if (switchPractice && adminUser) {\n      await switchPractice(newPracticeId);\n      // currentPracticeSelection will update via the useEffect hook when `user` (and thus adminUser.currentPracticeId) changes\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto py-8\">\n      <header className=\"mb-8 flex justify-between items-center\">\n        <div>\n            <h1 className=\"text-3xl font-bold text-primary\">Administrator Dashboard</h1>\n            {adminUser && (\n              <div className=\"mt-2\">\n                <span className=\"text-sm text-muted-foreground mr-2\">Viewing Practice:</span>\n                <Select\n                    // Use currentPracticeSelection if set, otherwise default to context, or empty string for uncontrolled state\n                    value={currentPracticeSelection || adminUser.currentPracticeId || ''}\n                    onValueChange={handlePracticeChange}\n                    disabled={isLoading}\n                >\n                  <SelectTrigger className=\"w-[280px]\">\n                    <SelectValue placeholder=\"Select practice to view\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {adminUser.accessiblePracticeIds && adminUser.accessiblePracticeIds.length > 0 ?\n                        adminUser.accessiblePracticeIds.map(practiceId => (\n                          <SelectItem key={practiceId} value={practiceId}>\n                            {practiceId ? practiceId.replace('practice_', '') : 'Unnamed Practice'}\n                          </SelectItem>\n                        )) :\n                        <SelectItem value=\"none\" disabled>No practices accessible</SelectItem>\n                    }\n                    {(!adminUser.accessiblePracticeIds || adminUser.accessiblePracticeIds.length === 0) && adminUser.currentPracticeId === \"practice_NONE\" && (\n                         <SelectItem value=\"practice_NONE\" disabled>No practices configured</SelectItem>\n                    )}\n                  </SelectContent>\n                </Select>\n              </div>\n            )}\n        </div>\n        <Button onClick={logout} variant=\"outline\" disabled={isLoading}>Logout</Button>\n      </header>\n      <p className=\"text-lg text-foreground\">Welcome, Administrator {adminUser.name || adminUser.email}!</p>\n      <p className=\"text-muted-foreground\">\n        You are currently managing: <span className=\"font-semibold\">\n          {(adminUser.currentPracticeId && adminUser.currentPracticeId !== \"practice_NONE\") ? adminUser.currentPracticeId.replace('practice_', '') : 'N/A'}\n        </span>.\n      </p>\n      <p className=\"text-sm text-muted-foreground\">\n        Accessible practices: {adminUser.accessiblePracticeIds && adminUser.accessiblePracticeIds.length > 0\n          ? adminUser.accessiblePracticeIds.map(id => id ? id.replace('practice_', '') : 'Unknown').join(', ')\n          : 'No other practices accessible'}\n      </p>\n      {/* Add administrator-specific components and features here, filtered by adminUser.currentPracticeId */}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}